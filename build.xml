<?xml version="1.0" encoding="UTF-8"?>
<project name="cade" default="all">
  
  
  <!-- Change the following property if tests compilation is needed -->
  <property name="skip.tests" value="true"/>

 <presetdef name="javac">
    <javac includeantruntime="false" />
  </presetdef>

  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.egg"/>
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.ear"/>
    <include name="*.jar"/>
    <include name="*.klib"/>
    <include name="*.ane"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  <property name="librarydir" value="${basedir}/lib"/>
  
  <path id="library.extra-weka-pkgs.classpath">
    <pathelement location="${librarydir}/localOutlierFactor.jar"/>
  </path>
  
  <path id="library.weka-3-8-5.classpath">
    <pathelement location="${librarydir}/weka-3-8-5/arpack_combined.jar"/>
    <pathelement location="${librarydir}/weka-3-8-5/core.jar"/>
    <pathelement location="${librarydir}/weka-3-8-5/mtj.jar"/>
    <pathelement location="${librarydir}/weka-3-8-5/weka.jar"/>
  </path>

  <path id="library.rcaller-4.0.2-jar-with-dependencies.classpath">
    <pathelement location="${librarydir}/RCaller-4.0.2-jar-with-dependencies.jar"/>
  </path>

  <!-- Module CADE -->
  
  <dirname property="module.cade.basedir" file="${ant.file}"/>
  
  <property name="compiler.args.cade" value="-encoding UTF-8 -source 11 -target 11 ${compiler.args}"/>
  
  <property name="cade.output.dir" value="${module.cade.basedir}/out/production/CADE"/>
  <property name="cade.testoutput.dir" value="${module.cade.basedir}/out/test/CADE"/>
  
  <path id="cade.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="cade.module.production.classpath">
    <path refid="library.rcaller-4.0.2-jar-with-dependencies.classpath"/>
    <path refid="library.weka-3-8-5.classpath"/>
    <path refid="library.extra-weka-pkgs.classpath"/>
<!--
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/junit-4.13.1.jar"/>
-->
  </path>
  
  <path id="cade.runtime.production.module.classpath">
    <pathelement location="${cade.output.dir}"/>
    <path refid="library.rcaller-4.0.2-jar-with-dependencies.classpath"/>
    <path refid="library.weka-3-8-5.classpath"/>
    <path refid="library.extra-weka-pkgs.classpath"/>
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/junit-4.13.1.jar"/>
  </path>
  
  <path id="cade.module.classpath">
    <pathelement location="${cade.output.dir}"/>
    <path refid="library.rcaller-4.0.2-jar-with-dependencies.classpath"/>
    <path refid="library.weka-3-8-5.classpath"/>
    <path refid="library.extra-weka-pkgs.classpath"/>
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/junit-4.13.1.jar"/>
  </path>
  
  <path id="cade.runtime.module.classpath">
    <pathelement location="${cade.testoutput.dir}"/>
    <pathelement location="${cade.output.dir}"/>
    <path refid="library.rcaller-4.0.2-jar-with-dependencies.classpath"/>
    <path refid="library.weka-3-8-5.classpath"/>
    <path refid="library.extra-weka-pkgs.classpath"/>
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/junit-4.13.1.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.cade">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.cade">
	<exclude name="**/devNoRelease/**"/>
    <patternset refid="excluded.from.module.cade"/>
  </patternset>
  
  <path id="cade.module.sourcepath">
    <dirset dir="${module.cade.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="cade.module.test.sourcepath">
    <dirset dir="${module.cade.basedir}">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.cade" depends="compile.module.cade.production,compile.module.cade.tests" description="Compile module CADE"/>
  
  <target name="compile.module.cade.production" description="Compile module CADE; production classes">
    <mkdir dir="${cade.output.dir}"/>
    <javac destdir="${cade.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.cade}"/>
      <bootclasspath refid="cade.module.bootclasspath"/>
      <classpath refid="cade.module.production.classpath"/>
      <src refid="cade.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.cade"/>
    </javac>
    
    <copy todir="${cade.output.dir}">
      <fileset dir="${module.cade.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.cade.tests" depends="compile.module.cade.production" description="compile module CADE; test classes" unless="${skip.tests}">
    <mkdir dir="${cade.testoutput.dir}"/>
    <javac destdir="${cade.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.cade}"/>
      <bootclasspath refid="cade.module.bootclasspath"/>
      <classpath refid="cade.module.classpath"/>
      <src refid="cade.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.cade"/>
    </javac>
    
    <copy todir="${cade.testoutput.dir}">
      <fileset dir="${module.cade.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.cade" description="cleanup module">
    <delete dir="${cade.output.dir}"/>
    <delete dir="${cade.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.cade, clean.artifact.cade:jar" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.cade" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.cade:jar" value="${basedir}/out/artifacts/CADE_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.CADE.jar" value="${artifacts.temp.dir}/CADE.jar"/>
  </target>
  
  <target name="clean.artifact.cade:jar" description="clean CADE:jar artifact output">
    <delete dir="${artifact.output.cade:jar}"/>
  </target>
  
  <target name="artifact.cade:jar" depends="init.artifacts, compile.module.cade" description="Build &#39;CADE:jar&#39; artifact">
    <mkdir dir="${artifact.output.cade:jar}"/>
    <jar destfile="${temp.jar.path.CADE.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset file="${basedir}/src/META-INF/MANIFEST.MF" prefix="META-INF"/>
      <zipfileset dir="${cade.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.CADE.jar}" tofile="${artifact.output.cade:jar}/CADE.jar"/>
<!--
    <copy file="${basedir}/../../../../lib/RCaller-4.0.2-jar-with-dependencies.jar" tofile="${artifact.output.cade:jar}/RCaller-4.0.2-jar-with-dependencies.jar"/>
    <copy file="${basedir}/../../../../lib/weka-3-8-5/weka.jar" tofile="${artifact.output.cade:jar}/weka.jar"/>
    <copy file="${basedir}/../../../../lib/weka-3-8-5/arpack_combined.jar" tofile="${artifact.output.cade:jar}/arpack_combined.jar"/>
    <copy file="${basedir}/../../../../lib/weka-3-8-5/core.jar" tofile="${artifact.output.cade:jar}/core.jar"/>
    <copy file="${basedir}/../../../../lib/weka-3-8-5/mtj.jar" tofile="${artifact.output.cade:jar}/mtj.jar"/>
-->
  </target>
  
  <target name="build.all.artifacts" depends="artifact.cade:jar" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>
